@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Newtonsoft.Json
@model QRCodeEvidentationApp.Models.DTO.LectureDto

@{
ViewData["Title"] = "Create";
Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-5">
    <h1 class="mb-4 text-center">Create Lecture</h1>
    <h4 class="text-muted">Lecture Details</h4>
    <hr />
    <div class="row">
        <div class="col-md-8 mx-auto">
            <form id="createForm" asp-action="Create" method="post" class="needs-validation" novalidate>
                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                <!-- Title -->
                <div class="form-group mb-3">
                    <label asp-for="Title" class="form-label"></label>
                    <input asp-for="Title" class="form-control" placeholder="Enter lecture title" />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>

                <!-- Start Time -->
                <div class="form-group mb-3">
                    <label asp-for="StartsAt" class="form-label">Start Time</label>
                    <input asp-for="StartsAt" class="form-control datetimepicker" placeholder="Select start time" />
                    <span class="text-danger"></span>
                </div>

                <!-- End Time -->
                <div class="form-group mb-3">
                    <label asp-for="EndsAt" class="form-label">End Time</label>
                    <input asp-for="EndsAt" class="form-control datetimepicker" placeholder="Select end time" />
                    <span class="text-danger"></span>
                </div>

                <!-- Lecture Details -->
                <div id="lectureDetails">
                    <!-- Type -->
                    <div class="form-group mb-3">
                        <label for="Type">Lecture Type</label>
                        @Html.DropDownListFor(model => model.TypeSelected, new SelectList(Model.Type), "Select a type", new { @class = "form-select", id = "Type" })
                    </div>

                    <!-- Valid Registration Until -->
                    <div class="form-group mb-3">
                        <label asp-for="ValidRegistrationUntil" class="form-label">Valid Registration Until</label>
                        <input asp-for="ValidRegistrationUntil" id="validRegistrationUntil" class="form-control" />
                        <span asp-validation-for="ValidRegistrationUntil" class="text-danger"></span>
                    </div>

                    <!-- Group of Courses -->
                    <div class="form-group mb-3">
                        <label for="GroupCourseId">Select Group of Courses</label>
                        @Html.DropDownListFor(model => model.GroupCourseId, new SelectList(Model.Groups, "Id", "Name"), "Select Group of Courses", new { @class = "form-select", id = "Groups" })
                    </div>

                    <!-- Hidden Fields -->
                    <input type="hidden" asp-for="Groups" />
                    <input type="hidden" asp-for="CoursesProfessor" />
                    <input type="hidden" asp-for="CoursesAssistant" />
                    <input type="hidden" asp-for="loggedInProfessorId" />

                    <!-- Submit Button -->
                    <div class="form-group text-center mt-4">
                        <input type="submit" value="Save" id="submitBtn" class="btn btn-primary w-100" />
                    </div>
                </div>

                <!-- Error Message -->
                <p id="errorMessage" class="text-danger text-center mt-3"></p>
            </form>
        </div>
    </div>

    <div class="text-center mt-4">
        <a asp-action="Index" class="btn btn-secondary">Back to List</a>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            let errorMessage = document.getElementById("errorMessage");
            var validRegistrationUntilInput = document.getElementById("validRegistrationUntil");
            var submitBtn = document.getElementById("submitBtn");
            var startsAtInput = document.getElementById("StartsAt");
            var endsAtInput = document.getElementById("EndsAt");

            // Initial validation check
            validateStartAndEnd();
            validateDates();
            
            function validateStartAndEnd() {
                if (!startsAtInput.value || !endsAtInput.value) {
                    return; // Skip if any input is empty
                }
                var startsAt = new Date(Date.parse(startsAtInput.value));
                var endsAt = new Date(Date.parse(endsAtInput.value));

                if (startsAt >= endsAt) {
                    errorMessage.textContent = "Start date cannot be after end date.";
                    submitBtn.disabled = true;
                } else {
                    errorMessage.textContent = "";
                    validateDates();
                }
            }

            function validateDates() {
                if (!startsAtInput.value || !endsAtInput.value || !validRegistrationUntilInput.value) {
                    return; // Skip if any input is empty
                }
                var startsAt = new Date(Date.parse(startsAtInput.value));
                var endsAt = new Date(Date.parse(endsAtInput.value));
                var validRegistrationUntil = new Date(Date.parse(validRegistrationUntilInput.value));

                if (validRegistrationUntil > startsAt && validRegistrationUntil < endsAt) {
                    errorMessage.textContent = "";
                    submitBtn.disabled = false;
                } else {
                    errorMessage.textContent = "Valid Registration Until must be between StartsAt and EndsAt.";
                    submitBtn.disabled = true;
                }
            }

            // Attach event listeners
            startsAtInput.addEventListener("input", validateStartAndEnd);
            endsAtInput.addEventListener("input", validateStartAndEnd);
            validRegistrationUntilInput.addEventListener("input", validateDates);

        });
    </script>
}